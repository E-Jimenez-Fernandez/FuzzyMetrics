% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FuzzyDistance.R
\name{FuzzyDistance}
\alias{FuzzyDistance}
\title{Compute fuzzy distance with given factors}
\usage{
FuzzyDistance(x, Factores)
}
\arguments{
\item{x}{A normalized data frame where rows represent observations and columns represent indicators.}

\item{Factores}{A vector of weights, where each weight corresponds to the relative importance of an indicator.}
}
\value{
A list containing:
\item{DFS}{A numeric vector representing the fuzzy distance for each observation.}
\item{Sym_welfare}{A matrix representing the symmetric welfare values based on the input factors and the normalized data.}
}
\description{
This function calculates the fuzzy distance for a normalized data frame based on a set of given factors (weights).
It also computes a symmetric welfare matrix, which adjusts the normalized values based on the weights.
}
\examples{
# Example 1: Compute fuzzy distance for normalized data with equal weights
normalized_data <- data.frame(
  indicator1 = c(0.1, 0.3, 0.5),
  indicator2 = c(0.6, 0.8, 0.2),
  indicator3 = c(0.7, 0.9, 0.4)
)
# Assume equal importance for all indicators
weights <- c(1, 1, 1)
FuzzyDistance(normalized_data, weights)

# Example 2: Compute fuzzy distance with different weights
custom_data <- data.frame(
  GDP = c(0.2, 0.5, 0.8),
  Unemployment = c(0.9, 0.7, 0.3),
  Literacy = c(0.1, 0.6, 0.9)
)
# Different weights for each indicator
weights_custom <- c(0.5, 2, 1.5)
result <- FuzzyDistance(custom_data, weights_custom)
print(result$DFS)  # Fuzzy distance vector
print(result$Sym_welfare)  # Symmetric welfare matrix

}
